What is React and its Purpose?
- React is a Javascript Library
- React's purpose is to show content(HTML) to users and handle user interaction.

Why not Redux ?
- React can work by itself
- It can also work with a tremendous variety of other libraries, packages, servers, and databases

A Javascript "class"
React 'components' are made using either Javascript functions or classes

JSX 
- a special dialect of JS which tells a react component how it should it look like when its renderred and shows up on the screen og the browser.
- It looks like HTML and can be placed in JS code. Determines the content of a React app just like normal HTML.

Event Handlers
- event handlers are used to detect user interaction and respond to it

React and ReactDOM
- React is split into two separate libraries
- "React" knows what a component is and how to make components work together.
- "ReactDOM" knows how to take a component and make it show up in the DOM.



'npm' (stands for nothing, but Node package manager)  = RUNS
'install' = we want to reference the install comnmand 
'-g' = intalls this package globally so we can trun it from the terminal 
'create-react-app' = name of the package we want to install

Alternate Route
npx create-react-app <name of project>

In a React app there are: `Webpack`, `Babel`, `Dev Server`
ES5 version of javascript
- supported across all browsers
Each newer version of JS with new and useful features.

What is Babel? 
A command line tool that takes any version of JS and return a newer version of JS thats supported on the browser

Project Directory
src, folder where we put all the source code we write
public, folder that stores static files, like images
node_modules, folder that contains all of our project dependencies
package.json, records project dependencies and configures the project
package.lock.json, records the exact version of packages that are installed
README.md, Instructions on how to use the project
